# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/btrfs-root" =
    {
      device = "/dev/disk/by-uuid/2d5e42d1-5bf3-48ab-9910-afc29721ad4f";
      fsType = "btrfs";
    };

  fileSystems."/nix" =
    {
      device = "/dev/disk/by-uuid/2d5e42d1-5bf3-48ab-9910-afc29721ad4f";
      fsType = "btrfs";
      options = [ "subvol=nix" ];
    };

  fileSystems."/var/log" =
    {
      device = "/dev/disk/by-uuid/2d5e42d1-5bf3-48ab-9910-afc29721ad4f";
      fsType = "btrfs";
      options = [ "subvol=var/log" ];
    };

  fileSystems."/var/lib" =
    {
      device = "/dev/disk/by-uuid/2d5e42d1-5bf3-48ab-9910-afc29721ad4f";
      fsType = "btrfs";
      options = [ "subvol=var/lib" ];
    };

  fileSystems."/home" =
    {
      device = "/dev/disk/by-uuid/2d5e42d1-5bf3-48ab-9910-afc29721ad4f";
      fsType = "btrfs";
      options = [ "subvol=home" ];
    };

  fileSystems."/etc/nixos" =
    {
      device = "/dev/disk/by-uuid/2d5e42d1-5bf3-48ab-9910-afc29721ad4f";
      fsType = "btrfs";
      options = [ "subvol=nixos-config" ];
    };

  fileSystems."/persist" =
    {
      device = "/dev/disk/by-uuid/2d5e42d1-5bf3-48ab-9910-afc29721ad4f";
      fsType = "btrfs";
      options = [ "subvol=persist" ];
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/5910-EC80";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/ddc11ee1-1c0f-43cb-bb07-30b4578c7c9f"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
